import math
import time

print(locals())  # функция возвращает все локальные переменные

"""
{'__name__': '__main__', '__doc__': None, '__package__': None, 
'__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x000002AAF02402E0>, '__spec__': None, 
'__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 
'__file__': 'Курс SelfEdu\\47. Импорт стандартных модулей. Команды import и from.py', '__cached__': None, 
'math': <module 'math' (built-in)>, 'time': <module 'time' (built-in)>}
"""

"""Импорт создает пространство имен с соответствующими именами, через которые мы можем обращаться к глобальным 
определениям в этих модулях. """

"ПРИМЕР"

a = math.ceil(1.8)
print(a)  # 2

print(math.pi)  # 3.141592653589793

"""Эти модули входят в стандартную библиотеку python"""

"""Если мы введем переменную с таким же названием, что и модуль, то при обращении будет ссылка на последнюю запись.
Т.е. случится перезапись."""

import datetime as dt  # импорт с присвоением псевдонима для модуля. Это позволяет избежать при необходимости перезаписи

print(dt.datetime.now())  # 2023-08-20 21:22:41.328026

"""Если не нужно подключать модуль целиком, то можно при импорте указать конкретные модули"""

from math import ceil as mc, pi  # если у нас есть функция ceil, то можно использовать псевдоним

print(pi)  # 3.141592653589793


def ceil(x):
    print('ceil')
    return x


a = mc(1.8)
print(a)  # 2

"""Чтобы импортировать все, необходимо испольовать *.
Однако это делать не рекомендуется, т.к. импортируются все функции и определения, что повышает шанс перезаписи"""

from turtle import *  # КРАЙНЕ НЕ РЕКОМЕНДУЕТСЯ

"""По стандарту PEP-8 каждый импорт рекомендуется делать с новой строки и в начале файла"""
