"""
Синтакис: lambda param1, param2,...:команда
Анонимная функция, т.к. у нее нет имени.
lambda функция автоматически возвращает результат своего действия (не нужен оператор return)
Разница с обычной функцией в том, что lambda функция может быть записана как элемент любой конструкции языка python
ОГРАНИЧЕНИЯ:
- можно прописывать только 1 конструкцию
- нельзя объявлять в несколько строчек
- нельзя использовать оператор присваивания
"""

s = lambda a, b: a + b
print(s(1, 2))

a = [4, 5, lambda: print('lambda'), 7, 8]  # Разница с обычной функцией в том, что lambda функция может быть записана
# как элемент любой конструкции языка python
a[2]()  # lambda - вызов функции. Круглые скобки () - это оператор вызова функции.

lst = [5, 3, 0, -6, 8, 10, 1]


def get_filter(a, filter=None):
    "Универсальная функция, которая будет выбирать из списка значения по определенному критерию"
    if filter is None:
        return a
    res = []
    for x in a:
        if filter(x):
            res.append(x)
    return res


r = get_filter(lst)
print(r)  # [5, 3, 0, -6, 8, 10, 1]
r2 = get_filter(lst, lambda x: x % 2 == 0)
print(r2)  # [0, -6, 8, 10] - сработал фильтр и остались только четные числа
r3 = get_filter(lst, lambda x: x > 0)
print(r3)  # [5, 3, 8, 10, 1] - сработал фильтр и остались только положительные числа
