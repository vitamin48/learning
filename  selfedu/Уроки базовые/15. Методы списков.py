a = [1, -54, 3, 23, 43, -45, True, 0]

"""Добавление значения"""
a.append(100)  # Любой тип данных, в том числе вложенный список. Добавляется только 1 элемент.
print(a)  # [1, -54, 3, 23, 43, -45, 0, 100]

"""Вставка в определенную позицию определенное значение"""
a.insert(3, -1000)  # 3 - индекс, -1000 - значение. Т.е. после 3 запишется -1000.
print(a)  # [1, -54, 3, -1000, 23, 43, -45, 0, 100]

"""Удаление по значению улемента"""
a.remove(True)  # удаление первого найденного элемента со значением True
print(a)  # [-54, 3, -1000, 23, 43, -45, True, 0, 100] (True осталось, но удалился первый элемент, равный 1, т.к.
# true это 1, а False это 0)

a.remove(True)  # удаление первого найденного элемента со значением True
print(a)  # [-54, 3, -1000, 23, 43, -45, 0, 100] (При повторе метода true удалилось)

# a.remove('hello') При попытке удалить несуществующий элемент будет ошибка

"""Удаление по индексу чрезе метод pop без ошибки, в случае отсутствия элемента в списке"""
a.pop()  # Удаление последнего элемента в списке
print(a)  # [-54, 3, -1000, 23, 43, -45, 0]
end_del = a.pop()  # Метод возвращает удаленное значение
print(end_del)  # 0
a.pop(3)  # Удаление элемента 23 по индексу 3

"""Очистка"""
b = [1, 2, 3]
b.clear()  # []

"""Создание копии списка"""
c = a.copy()  # Переменная с ссылается на другой объект

"""Число элементов с указанным значением"""
print(c.count(3))  # 1

"""Индекс определенного значения"""
print(c.index(-45))  # 4 (вторым аргументом прописывается стартовый индекс, с которого выполняется поиск)

"""Поменять порядок на обратный"""
c.reverse()
print(c)  # [-45, 43, -1000, 3, -54]

"""Сортировка по возрастанию (неубыванию - более точно, т.к. могут быть одинаковые значения) текущего списка"""
c.sort()
print(c)  # [-1000, -54, -45, 3, 43]
