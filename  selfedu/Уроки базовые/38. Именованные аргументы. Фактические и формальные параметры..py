def get_V(a, b, c, verbose=True):  # verbose - формальный аргумент (значение задано по умолчанию),
    # остальные a, b - фактические
    if verbose:
        print(f'a={a}, b={b}, c={c}')
    return a * b * c


v = get_V(1, b=2,
          c=3)  # комбинированный режим: именованные аргументы и позиционные. Позиционные аргументы всегда в начале
print(v)
"""
При формальном параметре имеет смысл указывать неизменяемый тип данных, иначе будет ссылка на один и тот же объект.
Например, если формальный аргумент lst = [] (список - изменяемый тип данных)
"""